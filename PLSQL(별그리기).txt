SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE vupsal  (vempno emp.empno%TYPE)
   IS
	vename 	emp.ename%TYPE;
	vsal 		emp.sal%TYPE;
	vdeptno 	emp.deptno%TYPE;
	vupsal 	emp.sal%TYPE;
   BEGIN
	SELECT ename, sal, deptno
	INTO vename, vsal, vdeptno
	FROM emp
	WHERE empno = vempno;
	vupsal := CASE
	   WHEN vdeptno = 10 THEN vsal * 1.3
	   WHEN vdeptno IN (20, 30) THEN vsal*1.5
	   WHEN vdeptno > 30 THEN vsal*1.2
	   ELSE vsal
	END;
   DBMS_OUTPUT.PUT_LINE (vempno||'/'||vename||'/'||vsal||'/'||vdeptno||'/'||vupsal);
END;
/
프로시저가 생성되었습니다.

EXEC vupsal(7900);
EXEC vupsal(7902);
EXEC vupsal(7934);


DECLARE
    i NUMBER := 1;
    j NUMBER;   
    star_str VARCHAR2(100);
BEGIN
    LOOP
        star_str := '';
        j := 1;       
   LOOP
            star_str := star_str || '*'; 
            j := j + 1;
            EXIT WHEN j > i;
        END LOOP;
        DBMS_OUTPUT.PUT_LINE(star_str);
        i := i + 1;
        EXIT WHEN i > 5;
    END LOOP;
END;
/


*
**
***
****
*****

PL/SQL 처리가 정상적으로 완료되었습니다.



DECLARE
    i NUMBER := 1;
BEGIN
    WHILE i <= 5 LOOP
        DBMS_OUTPUT.PUT_LINE(RPAD('-', 5 - i, '-') || RPAD('*', i, '*'));
        i := i + 1;
    END LOOP;
END;
/

----*
---**
--***
-****
*****

PL/SQL 처리가 정상적으로 완료되었습니다.


DECLARE 
   i NUMBER := 1;
BEGIN
   FOR i IN 1..5 LOOP
      DBMS_OUTPUT.PUT_LINE(LPAD('*', i, '*') || LPAD('-', 5 - i, '-') || RPAD('-',  5- i, '-') || RPAD('*', i, '*'));
   END LOOP;
END;
/

*--------*
**------**
***----***
****--****
**********

PL/SQL 처리가 정상적으로 완료되었습니다.



