CREATE TABLE student2018(
Student_No number(10) Primary Key,
Name varchar2(12) not null,
Grade number(1) not null,
kor number(3) not null,
eng number(3) not null,
math number(3) not null,
TOEIC number(4) not null
);

INSERT INTO student2018 VALUES(
200712112,'전인하',1,90,90,70,300
);

INSERT INTO student2018 VALUES(
200710109,'박미경',1,60,50,50,400
);

INSERT INTO student2018 VALUES(
200730107,'이동훈',1,80,70,80,700
);

INSERT INTO student2018 VALUES(
200610114,'김진영',2,90,80,40,500
);

INSERT INTO student2018 VALUES(
200620101,'오유석',2,90,90,90,900
);

INSERT INTO student2018 VALUES(
200513111,'이몽룡',3,80,80,70,500
);

INSERT INTO student2018 VALUES(
200240105,'성춘향',4,50,60,70,700
);

INSERT INTO student2018 VALUES(
200340125,'박지수',4,90,90,90,900
);



SQL> select * from student2018;

STUDENT_NO NAME                          GRADE        KOR        ENG       MATH      TOEIC
---------- ------------------------ ---------- ---------- ---------- ---------- ----------
 200712112 전인하                            1         90         90         70        300
 200710109 박미경                            1         60         50         50        400
 200730107 이동훈                            1         80         70         80        700
 200610114 김진영                            2         90         80         40        500
 200620101 오유석                            2         90         90         90        900
 200513111 이몽룡                            3         80         80         70        500
 200240105 성춘향                            4         50         60         70        700
 200340125 박지수                            4         90         90         90        900

8 행이 선택되었습니다.

select student_no,name,grade,toeic,평균,평균성적
from (select student_no,name,grade,toeic,round((kor+eng+math)/3,1) as 평균 ,round( (kor+eng+math)/3* 0.8 + toeic/10*0.2) as 평균성적 
from student2018)
order by 평균성적 desc;
STUDENT_NO NAME                          GRADE      TOEIC       평균   평균성적
---------- ------------------------ ---------- ---------- ---------- ----------
 200340125 박지수                            4        900         90         90
 200620101 오유석                            2        900         90         90
 200730107 이동훈                            1        700       76.7         75
 200712112 전인하                            1        300       83.3         73
 200513111 이몽룡                            3        500       76.7         71
 200610114 김진영                            2        500         70         66
 200240105 성춘향                            4        700         60         62
 200710109 박미경                            1        400       53.3         51

8 행이 선택되었습니다.


SELECT studno, name, height, weight, 표준체중, 비만정도
FROM (
    SELECT studno, name, height, weight, (height - 110) AS 표준체중,
    CASE 
        WHEN weight >= (height - 110) * 1.2 THEN '비만'
        WHEN weight <= (height - 110) * 1.1 THEN '정상체중'
        ELSE '과체중'
    END AS 비만정도
    FROM student
);

  STUDNO NAME                     HEIGHT     WEIGHT   표준체중 비만정도
---------- -------------------- ---------- ---------- ---------- ------------------------
      9411 서진수                      180         72         70 정상체중
      9412 서재수                      172         64         62 정상체중
      9413 이미경                      168         52         58 정상체중
      9414 김재수                      177         83         67 비만
      9415 박동호                      182         70         72 정상체중
      9511 김신영                      164         48         54 정상체중
      9512 신은경                      161         42         51 정상체중
      9513 오나라                      177         55         67 정상체중
      9514 구유미                      160         58         50 과체중
      9515 임세현                      171         54         61 정상체중
      9611 일지매                      182         72         72 정상체중

    STUDNO NAME                     HEIGHT     WEIGHT   표준체중 비만정도
---------- -------------------- ---------- ---------- ---------- ------------------------
      9612 김진욱                      171         70         61 과체중
      9613 안광훈                      175         82         65 비만
      9614 김문호                      166         51         56 정상체중
      9615 노정호                      184         62         74 정상체중
      9711 이윤나                      162         48         52 정상체중
      9712 안은수                      175         63         65 정상체중
      9713 인영민                      173         69         63 정상체중
      9714 김주현                      179         81         69 과체중
      9715 허우                        163         51         53 정상체중

20 행이 선택되었습니다.

CREATE TABLE ORDER2020(
orderno varchar2(5) not null,
bookno number(5) not null,
orderdate date not null,
price number(5) not null,
amount number(3) not null
);

alter table order2020 add constraint order_pk primary key (orderno,bookno);


INSERT INTO order2020 values ('A100',1122,'2019-03-03',9500,2);
INSERT INTO order2020 VALUES('A100',1234,'2019-03-03',9000,2);
INSERT INTO order2020 VALUES('A200',2345,'2019-04-06',7000,3);
INSERT INTO order2020 VALUES('A200',1122,'2019-04-06',9500,2);
INSERT INTO order2020 VALUES('A300',1122,'2019-05-10',9500,4);
INSERT INTO order2020 VALUES('A300',3456,'2019-05-10',10000,3);
INSERT INTO order2020 VALUES('A400',2345,'2019-06-15',7000,2);
INSERT INTO order2020 VALUES('A400',1122,'2019-06-15',9500,2);

SELECT ORDERNO, SUM(PRICE * AMOUNT) AS TOTAL_SALES
FROM order2020
GROUP BY ORDERNO;
SELECT ORDERNO, SUM(PRICE * AMOUNT) AS TOTAL_SALES
  2  FROM order2020
  3  GROUP BY ORDERNO;

ORDERNO    TOTAL_SALES
---------- -----------
A100             37000
A200             40000
A300             68000
A400             33000

SELECT ORDERNO, 
       TO_CHAR(SUM(PRICE * AMOUNT), '999,999') AS 총판매액,
       CASE 
           WHEN SUM(PRICE * AMOUNT) >= 50000 THEN '0'
           ELSE '2,500'
       END AS 배달비,
       TO_CHAR(SUM(PRICE * AMOUNT) + 
           CASE 
               WHEN SUM(PRICE * AMOUNT) >= 50000 THEN 0
               ELSE 2500
           END, '999,999') AS 결제액
FROM order2020
GROUP BY ORDERNO;

 SELECT ORDERNO,
  2         TO_CHAR(SUM(PRICE * AMOUNT), '999,999') AS 총판매액,
  3         CASE
  4             WHEN SUM(PRICE * AMOUNT) >= 50000 THEN '0'
  5             ELSE '2,500'
  6         END AS 배달비,
  7         TO_CHAR(SUM(PRICE * AMOUNT) +
  8             CASE
  9                 WHEN SUM(PRICE * AMOUNT) >= 50000 THEN 0
 10                 ELSE 2500
 11             END, '999,999') AS 결제액
 12  FROM order2020
 13  GROUP BY ORDERNO;

ORDERNO    총판매액         배달비     결제액
---------- ---------------- ---------- ----------------
A100         37,000         2,500        39,500
A200         40,000         2,500        42,500
A300         68,000         0            68,000
A400         33,000         2,500        35,500



